-- 1 task
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ФАМИЛИЯ > Ёлкин.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД = 142390.
-- c) Н_ВЕДОМОСТИ.ЧЛВК_ИД = 117219.
-- Вид соединения: LEFT JOIN.

SELECT "Н_ЛЮДИ"."ИД", "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
FROM "Н_ЛЮДИ"
         LEFT JOIN "Н_ВЕДОМОСТИ" ON "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ФАМИЛИЯ" > 'Ёлкин'
  AND "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = 142390
  AND "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = 117219;

-- 2 task
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ИД < 163484.
-- b) Н_ОБУЧЕНИЯ.НЗК > 999080.
-- Вид соединения: LEFT JOIN.

SELECT "Н_ЛЮДИ"."ОТЧЕСТВО", "Н_ОБУЧЕНИЯ"."НЗК", "Н_УЧЕНИКИ"."ГРУППА"
FROM "Н_ЛЮДИ"
         LEFT JOIN "Н_ОБУЧЕНИЯ" ON "Н_ЛЮДИ"."ИД" = "Н_ОБУЧЕНИЯ"."ЧЛВК_ИД"
         LEFT JOIN "Н_УЧЕНИКИ" ON "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ИД" < 163484
  AND CAST("Н_ОБУЧЕНИЯ"."НЗК" AS INT) > 999080;

-- 3 task 
-- Составить запрос, который ответит на вопрос, есть ли среди студентов вечерней формы обучения те, кто не имеет отчества.

SELECT (CASE WHEN COUNT(*)=0 THEN 'NO:(' ELSE 'YES:3' END) AS "ОТВЕТ"
FROM "Н_УЧЕНИКИ"
         INNER JOIN "Н_ЛЮДИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
         INNER JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
         INNER JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
WHERE "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИМЯ_В_ИМИН_ПАДЕЖЕ" = 'вечерняя'
  AND "Н_ЛЮДИ"."ОТЧЕСТВО" = '.';

-- 4 task
-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) более 2 групп ФКТИУ.
-- Для реализации использовать подзапрос.

SELECT "Н_ГРУППЫ_ПЛАНОВ"."ПЛАН_ИД"
FROM "Н_ГРУППЫ_ПЛАНОВ"
WHERE "ПЛАН_ИД" IN (SELECT "Н_ПЛАНЫ"."ИД"
                    FROM "Н_ПЛАНЫ"
                             INNER JOIN "Н_ОТДЕЛЫ" ON "Н_ОТДЕЛЫ"."ИД" = "Н_ПЛАНЫ"."ОТД_ИД"
                    WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ')
GROUP BY "Н_ГРУППЫ_ПЛАНОВ"."ПЛАН_ИД"
HAVING COUNT(*) > 2;

-- 5 task
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка равна средней оценк(е|и) в группе 3100.

SELECT "Н_УЧЕНИКИ"."ИД",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО",
       ROUND(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT)), 2) AS "СР_ОЦЕНКА"
FROM "Н_УЧЕНИКИ"
         INNER JOIN "Н_ЛЮДИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
         LEFT JOIN "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
WHERE "Н_УЧЕНИКИ"."ГРУППА" = '4120' AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[0-5]$'
GROUP BY "Н_УЧЕНИКИ"."ИД", "Н_ЛЮДИ"."ФАМИЛИЯ", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ОТЧЕСТВО"
HAVING ROUND(AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT)), 2) <
       ROUND((SELECT AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT))
              FROM "Н_УЧЕНИКИ"
                       INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
              WHERE "Н_УЧЕНИКИ"."ГРУППА" = '3100'
                AND "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2-5]$'), 2);

-- 6 task
-- Получить список студентов, отчисленных ровно первого сентября 2012 года с очной формы обучения. В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать подзапрос с EXISTS.

SELECT "ВНЕШНИЙ_ЗАПРОС"."ГРУППА",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО",
       "ВНЕШНИЙ_ЗАПРОС"."П_ПРКОК_ИД",
       "ВНЕШНИЙ_ЗАПРОС"."КОНЕЦ"
FROM "Н_УЧЕНИКИ" "ВНЕШНИЙ_ЗАПРОС"
         INNER JOIN "Н_ЛЮДИ" on "ВНЕШНИЙ_ЗАПРОС"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
         INNER JOIN "Н_ПЛАНЫ" ON "ВНЕШНИЙ_ЗАПРОС"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
         INNER JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
WHERE "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИМЯ_В_ИМИН_ПАДЕЖЕ" = 'очная'
  AND EXISTS(SELECT *
             FROM "Н_УЧЕНИКИ" "ВНУТРЕННИЙ_ЗАПРОС"
             WHERE "ВНУТРЕННИЙ_ЗАПРОС"."ПРИЗНАК" = 'отчисл'
               AND "ВНУТРЕННИЙ_ЗАПРОС"."СОСТОЯНИЕ" = 'утвержден'
               AND "ВНУТРЕННИЙ_ЗАПРОС"."ИД" = "ВНЕШНИЙ_ЗАПРОС"."ИД"
               AND CAST("ВНУТРЕННИЙ_ЗАПРОС"."КОНЕЦ" AS DATE) < '2012-09-01');

-- 7 task
-- Сформировать запрос для получения числа на ФКТИУ хорошистов.

SELECT COUNT(*) AS "КОЛИЧЕСТВО_ХОРОШИСТОВ"
FROM (SELECT "Н_УЧЕНИКИ"."ИД"
      FROM "Н_УЧЕНИКИ"
               INNER JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
               INNER JOIN "Н_ОТДЕЛЫ" ON "Н_ОТДЕЛЫ"."ИД" = "Н_ПЛАНЫ"."ОТД_ИД"
               INNER JOIN "Н_ВЕДОМОСТИ" ON "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
      WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ'
      GROUP BY "Н_УЧЕНИКИ"."ИД"
      HAVING AVG(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" AS INT))
             FILTER (WHERE "Н_ВЕДОМОСТИ"."ОЦЕНКА" ~ '^[2-5]$') BETWEEN 4.0 AND 4.5) "ИДХОРОШИСТОВ";